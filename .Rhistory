#assume this is 0
resample_number1 =1
}else if(dfx$main_data.Resampling1==0){
resample_number1 = 1
}else if(dfx$main_data.Resampling1==1){
resample_number1 = 2
}else if(dfx$main_data.Resampling1==2){
resample_number1 = 3
}
#resampled number for 3x plots
resample_number2 = 1
if(is.na(dfx$main_data.Resampling2 )){
#assume this is 0
resample_number2 =1
}else if(dfx$main_data.Resampling2==0){
resample_number2 = 1
}else if(dfx$main_data.Resampling2==1){
resample_number2 = 2
}else if(dfx$main_data.Resampling2==2){
resample_number1 = 3
}
#get number of large dbh trees >10cm dbh
Number_of_tree_in_30x30=NA
size_class=NA
if(dfx$tree_data.plot_type == "30x30m" | dfx$tree_data.plot_type=="30x30m_Special"){
Number_of_tree_in_30x30=dfx$tree_data.Number_of_trees/resample_number1
size_class=">10cm"
}
if( dfx$tree_data.plot_type == "10x10m"){
#Scale tree number to 30x30m by multiplying by 9
Number_of_tree_in_30x30=(dfx$tree_data.Number_of_trees * 9)/resample_number1
size_class=">10cm"
}
#Get number of medium-sized trees 1-9.9cm dbh
if(dfx$tree_data.plot_type == "3x3m within 30x30m" |
dfx$tree_data.plot_type=="3x3m_Special" |
dfx$tree_data.plot_type=="3x3m within 10x10m" ){
#Scale tree number to 30x30m by multiplying by 100
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*100)
size_class="1-9.9cm"
}
#Get number of medium-sized trees 1cm dbh
if(dfx$tree_data.plot_type== "1x1m"){
#Scale tree number to 30x30m by multiplying by 900
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*900)
size_class="<1cm"}
dfx_out = data.frame(Number_of_tree_in_30x30=Number_of_tree_in_30x30, size_class=size_class)
return(dfx_out)
})
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_trees_per_30x30m
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#get the number restores, planted, regnerating, etc,
tree_freqs=aggregate(site_tree_data$Number_of_trees_per_30x30m, list("Tree_type"=site_tree_data$tree_data.Tree_type,
"Species" = site_tree_data$tree_data.Species,
"size_class"=site_tree_data$size_class), sum)
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_trees_per_30x30m
Number_of_trees_per_30x30m
Number_of_trees_per_30x30m = lapply(1:length(site_tree_data[,1]), FUN=function(x){
#select row
dfx=site_tree_data[1,]
#resampled number for 30x or 10x plots
resample_number1 = 1
if(is.na(dfx$main_data.Resampling1 )){
#assume this is 0
resample_number1 =1
}else if(dfx$main_data.Resampling1==0){
resample_number1 = 1
}else if(dfx$main_data.Resampling1==1){
resample_number1 = 2
}else if(dfx$main_data.Resampling1==2){
resample_number1 = 3
}
#resampled number for 3x plots
resample_number2 = 1
if(is.na(dfx$main_data.Resampling2 )){
#assume this is 0
resample_number2 =1
}else if(dfx$main_data.Resampling2==0){
resample_number2 = 1
}else if(dfx$main_data.Resampling2==1){
resample_number2 = 2
}else if(dfx$main_data.Resampling2==2){
resample_number1 = 3
}
#get number of large dbh trees >10cm dbh
Number_of_tree_in_30x30=NA
size_class=NA
if(dfx$tree_data.plot_type == "30x30m" | dfx$tree_data.plot_type=="30x30m_Special"){
Number_of_tree_in_30x30=dfx$tree_data.Number_of_trees/resample_number1
size_class=">10cm"
}
if( dfx$tree_data.plot_type == "10x10m"){
#Scale tree number to 30x30m by multiplying by 9
Number_of_tree_in_30x30=(dfx$tree_data.Number_of_trees * 9)/resample_number1
size_class=">10cm"
}
#Get number of medium-sized trees 1-9.9cm dbh
if(dfx$tree_data.plot_type == "3x3m within 30x30m" |
dfx$tree_data.plot_type=="3x3m_Special" |
dfx$tree_data.plot_type=="3x3m within 10x10m" ){
#Scale tree number to 30x30m by multiplying by 100
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*100)
size_class="1-9.9cm"
}
#Get number of medium-sized trees 1cm dbh
if(dfx$tree_data.plot_type== "1x1m"){
#Scale tree number to 30x30m by multiplying by 900
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*900)
size_class="<1cm"}
dfx_out = data.frame(Number_of_tree_in_30x30=Number_of_tree_in_30x30, size_class=size_class)
return(dfx_out)
})
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
Number_of_trees_per_30x30m
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_tree_in_30x30
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#get the number restores, planted, regnerating, etc,
tree_freqs=aggregate(site_tree_data$Number_of_trees_per_30x30m, list("Tree_type"=site_tree_data$tree_data.Tree_type,
"Species" = site_tree_data$tree_data.Species,
"size_class"=site_tree_data$size_class), sum)
tree_freqs
#cylce through each row and scale the number of trees:
Number_of_trees_per_30x30m = lapply(1:length(site_tree_data[,1]), FUN=function(x){
#select row
dfx=site_tree_data[x,]
#resampled number for 30x or 10x plots
resample_number1 = 1
if(is.na(dfx$main_data.Resampling1 )){
#assume this is 0
resample_number1 =1
}else if(dfx$main_data.Resampling1==0){
resample_number1 = 1
}else if(dfx$main_data.Resampling1==1){
resample_number1 = 2
}else if(dfx$main_data.Resampling1==2){
resample_number1 = 3
}
#resampled number for 3x plots
resample_number2 = 1
if(is.na(dfx$main_data.Resampling2 )){
#assume this is 0
resample_number2 =1
}else if(dfx$main_data.Resampling2==0){
resample_number2 = 1
}else if(dfx$main_data.Resampling2==1){
resample_number2 = 2
}else if(dfx$main_data.Resampling2==2){
resample_number1 = 3
}
#get number of large dbh trees >10cm dbh
Number_of_tree_in_30x30=NA
size_class=NA
if(dfx$tree_data.plot_type == "30x30m" | dfx$tree_data.plot_type=="30x30m_Special"){
Number_of_tree_in_30x30=dfx$tree_data.Number_of_trees/resample_number1
size_class=">10cm"
}
if( dfx$tree_data.plot_type == "10x10m"){
#Scale tree number to 30x30m by multiplying by 9
Number_of_tree_in_30x30=(dfx$tree_data.Number_of_trees * 9)/resample_number1
size_class=">10cm"
}
#Get number of medium-sized trees 1-9.9cm dbh
if(dfx$tree_data.plot_type == "3x3m within 30x30m" |
dfx$tree_data.plot_type=="3x3m_Special" |
dfx$tree_data.plot_type=="3x3m within 10x10m" ){
#Scale tree number to 30x30m by multiplying by 100
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*100)
size_class="1-9.9cm"
}
#Get number of medium-sized trees 1cm dbh
if(dfx$tree_data.plot_type== "1x1m"){
#Scale tree number to 30x30m by multiplying by 900
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*900)
size_class="<1cm"}
dfx_out = data.frame(Number_of_tree_in_30x30=Number_of_tree_in_30x30, size_class=size_class)
return(dfx_out)
})
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
Number_of_trees_per_30x30m
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_tree_in_30x30
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#get the number restores, planted, regnerating, etc,
tree_freqs=aggregate(site_tree_data$Number_of_trees_per_30x30m, list("Tree_type"=site_tree_data$tree_data.Tree_type,
"Species" = site_tree_data$tree_data.Species,
"size_class"=site_tree_data$size_class), sum)
tree_freqs
#Change column names to x
colnames(tree_freqs)[which(colnames(tree_freqs)=="x")] = "Tree_per_sq_30m"
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
tree_freq_out
tree_freqs
upi=na.omit(unique(tree_data$tree_data._id))
trefreq_data=lapply(1:length(upi), FUN=function(x){
maindf=main_data[which(main_data$main_data.X_id== upi[x]),]
print(x)
#Select columns of interest main df
main_cols=which(colnames(maindf) %in% c("main_data.Country",  "main_data.Site_ID",
"main_data.Plot_ID", "main_data.Plot_Type",
"main_data.Plot_Permanence", "main_data.Timeframe",
"main_data.PlantingPattern", "main_data.Enter_a_date",
"main_data.Resampling1", "main_data.Resampling2",
"main_data.X_id"))
main_add_to_tree = maindf[,main_cols]
#get tree data with appropriate ID
trees = tree_data[which(tree_data$tree_data._id== upi[x]),]
#repeat main data for length of tree data
repped_main = main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(trees$tree_data._id)), ]
#cbind replicatedmain data to tree data
site_tree_data=cbind(trees, repped_main)[,-1]
#Remove rows that have no tree numbers #NOTE: This assumes users are entering 0's for tree frequencies
site_tree_data=site_tree_data[-which(is.na(site_tree_data$tree_data.Number_of_trees)),]
if(length(site_tree_data[,1])>0){
#cylce through each row and scale the number of trees:
Number_of_trees_per_30x30m = lapply(1:length(site_tree_data[,1]), FUN=function(x){
#select row
dfx=site_tree_data[x,]
#resampled number for 30x or 10x plots
resample_number1 = 1
if(is.na(dfx$main_data.Resampling1 )){
#assume this is 0
resample_number1 =1
}else if(dfx$main_data.Resampling1==0){
resample_number1 = 1
}else if(dfx$main_data.Resampling1==1){
resample_number1 = 2
}else if(dfx$main_data.Resampling1==2){
resample_number1 = 3
}
#resampled number for 3x plots
resample_number2 = 1
if(is.na(dfx$main_data.Resampling2 )){
#assume this is 0
resample_number2 =1
}else if(dfx$main_data.Resampling2==0){
resample_number2 = 1
}else if(dfx$main_data.Resampling2==1){
resample_number2 = 2
}else if(dfx$main_data.Resampling2==2){
resample_number1 = 3
}
#get number of large dbh trees >10cm dbh
Number_of_tree_in_30x30=NA
size_class=NA
if(dfx$tree_data.plot_type == "30x30m" | dfx$tree_data.plot_type=="30x30m_Special"){
Number_of_tree_in_30x30=dfx$tree_data.Number_of_trees/resample_number1
size_class=">10cm"
}
if( dfx$tree_data.plot_type == "10x10m"){
#Scale tree number to 30x30m by multiplying by 9
Number_of_tree_in_30x30=(dfx$tree_data.Number_of_trees * 9)/resample_number1
size_class=">10cm"
}
#Get number of medium-sized trees 1-9.9cm dbh
if(dfx$tree_data.plot_type == "3x3m within 30x30m" |
dfx$tree_data.plot_type=="3x3m_Special" |
dfx$tree_data.plot_type=="3x3m within 10x10m" ){
#Scale tree number to 30x30m by multiplying by 100
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*100)
size_class="1-9.9cm"
}
#Get number of medium-sized trees 1cm dbh
if(dfx$tree_data.plot_type== "1x1m"){
#Scale tree number to 30x30m by multiplying by 900
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*900)
size_class="<1cm"}
dfx_out = data.frame(Number_of_tree_in_30x30=Number_of_tree_in_30x30, size_class=size_class)
return(dfx_out)
})
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_tree_in_30x30
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#get the number restores, planted, regnerating, etc,
tree_freqs=aggregate(site_tree_data$Number_of_trees_per_30x30m, list("Tree_type"=site_tree_data$tree_data.Tree_type,
"Species" = site_tree_data$tree_data.Species,
"size_class"=site_tree_data$size_class), sum)
#Change column names to x
colnames(tree_freqs)[which(colnames(tree_freqs)=="x")] = "Tree_per_sq_30m"
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
return(tree_freq_out)
}else{
tree_freqs = data.frame("Tree_type" = NA, "Species" = NA, "size_class", "Tree_per_sq_30m" = NA)
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
return(tree_freq_out)
}
})
tree_freq_data_site=do.call("rbind", trefreq_data)
tree_freqs
trefreq_data=lapply(1:length(upi), FUN=function(x){
maindf=main_data[which(main_data$main_data.X_id== upi[x]),]
#print(x)
#Select columns of interest main df
main_cols=which(colnames(maindf) %in% c("main_data.Country",  "main_data.Site_ID",
"main_data.Plot_ID", "main_data.Plot_Type",
"main_data.Plot_Permanence", "main_data.Timeframe",
"main_data.PlantingPattern", "main_data.Enter_a_date",
"main_data.Resampling1", "main_data.Resampling2",
"main_data.X_id"))
main_add_to_tree = maindf[,main_cols]
#get tree data with appropriate ID
trees = tree_data[which(tree_data$tree_data._id== upi[x]),]
#repeat main data for length of tree data
repped_main = main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(trees$tree_data._id)), ]
#cbind replicatedmain data to tree data
site_tree_data=cbind(trees, repped_main)[,-1]
#Remove rows that have no tree numbers #NOTE: This assumes users are entering 0's for tree frequencies
site_tree_data=site_tree_data[-which(is.na(site_tree_data$tree_data.Number_of_trees)),]
if(length(site_tree_data[,1])>0){
#cylce through each row and scale the number of trees:
Number_of_trees_per_30x30m = lapply(1:length(site_tree_data[,1]), FUN=function(x){
#select row
dfx=site_tree_data[x,]
#resampled number for 30x or 10x plots
resample_number1 = 1
if(is.na(dfx$main_data.Resampling1 )){
#assume this is 0
resample_number1 =1
}else if(dfx$main_data.Resampling1==0){
resample_number1 = 1
}else if(dfx$main_data.Resampling1==1){
resample_number1 = 2
}else if(dfx$main_data.Resampling1==2){
resample_number1 = 3
}
#resampled number for 3x plots
resample_number2 = 1
if(is.na(dfx$main_data.Resampling2 )){
#assume this is 0
resample_number2 =1
}else if(dfx$main_data.Resampling2==0){
resample_number2 = 1
}else if(dfx$main_data.Resampling2==1){
resample_number2 = 2
}else if(dfx$main_data.Resampling2==2){
resample_number1 = 3
}
#get number of large dbh trees >10cm dbh
Number_of_tree_in_30x30=NA
size_class=NA
if(dfx$tree_data.plot_type == "30x30m" | dfx$tree_data.plot_type=="30x30m_Special"){
Number_of_tree_in_30x30=dfx$tree_data.Number_of_trees/resample_number1
size_class=">10cm"
}
if( dfx$tree_data.plot_type == "10x10m"){
#Scale tree number to 30x30m by multiplying by 9
Number_of_tree_in_30x30=(dfx$tree_data.Number_of_trees * 9)/resample_number1
size_class=">10cm"
}
#Get number of medium-sized trees 1-9.9cm dbh
if(dfx$tree_data.plot_type == "3x3m within 30x30m" |
dfx$tree_data.plot_type=="3x3m_Special" |
dfx$tree_data.plot_type=="3x3m within 10x10m" ){
#Scale tree number to 30x30m by multiplying by 100
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*100)
size_class="1-9.9cm"
}
#Get number of medium-sized trees 1cm dbh
if(dfx$tree_data.plot_type== "1x1m"){
#Scale tree number to 30x30m by multiplying by 900
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*900)
size_class="<1cm"}
dfx_out = data.frame(Number_of_tree_in_30x30=Number_of_tree_in_30x30, size_class=size_class)
return(dfx_out)
})
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_tree_in_30x30
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#get the number restores, planted, regnerating, etc,
tree_freqs=aggregate(site_tree_data$Number_of_trees_per_30x30m, list("Tree_type"=site_tree_data$tree_data.Tree_type,
"Species" = site_tree_data$tree_data.Species,
"size_class"=site_tree_data$size_class), sum)
#Change column names to x
colnames(tree_freqs)[which(colnames(tree_freqs)=="x")] = "Tree_per_sq_30m"
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
return(tree_freq_out)
}else{
tree_freqs = data.frame("Tree_type" = NA, "Species" = NA, "size_class"=NA, "Tree_per_sq_30m" = NA)
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
return(tree_freq_out)
}
})
tree_freq_data_site=do.call("rbind", trefreq_data)
tree_freq_data_site
write.csv(tree_freq_data_site, PPC_ind_file_name)
upi=na.omit(unique(tree_data$tree_data._id))
trefreq_data=lapply(1:length(upi), FUN=function(x){
maindf=main_data[which(main_data$main_data.X_id== upi[x]),]
#print(x)
#Select columns of interest main df
main_cols=which(colnames(maindf) %in% c("main_data.Country",  "main_data.Site_ID",
"main_data.Plot_ID", "main_data.Plot_Type",
"main_data.Plot_Permanence", "main_data.Timeframe",
"main_data.PlantingPattern", "main_data.Enter_a_date",
"main_data.Resampling1", "main_data.Resampling2",
"main_data.X_id"))
main_add_to_tree = maindf[,main_cols]
#get tree data with appropriate ID
trees = tree_data[which(tree_data$tree_data._id== upi[x]),]
#repeat main data for length of tree data
repped_main = main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(trees$tree_data._id)), ]
#cbind replicatedmain data to tree data
site_tree_data=cbind(trees, repped_main)[,-1]
#Remove rows that have no tree numbers #NOTE: This assumes users are entering 0's for tree frequencies
site_tree_data=site_tree_data[-which(is.na(site_tree_data$tree_data.Number_of_trees)),]
if(length(site_tree_data[,1])>0){
#cylce through each row and scale the number of trees:
Number_of_trees_per_30x30m = lapply(1:length(site_tree_data[,1]), FUN=function(x){
#select row
dfx=site_tree_data[x,]
#resampled number for 30x or 10x plots
resample_number1 = 1
if(is.na(dfx$main_data.Resampling1 )){
#assume this is 0
resample_number1 =1
}else if(dfx$main_data.Resampling1==0){
resample_number1 = 1
}else if(dfx$main_data.Resampling1==1){
resample_number1 = 2
}else if(dfx$main_data.Resampling1==2){
resample_number1 = 3
}
#resampled number for 3x plots
resample_number2 = 1
if(is.na(dfx$main_data.Resampling2 )){
#assume this is 0
resample_number2 =1
}else if(dfx$main_data.Resampling2==0){
resample_number2 = 1
}else if(dfx$main_data.Resampling2==1){
resample_number2 = 2
}else if(dfx$main_data.Resampling2==2){
resample_number1 = 3
}
#get number of large dbh trees >10cm dbh
Number_of_tree_in_30x30=NA
size_class=NA
if(dfx$tree_data.plot_type == "30x30m" | dfx$tree_data.plot_type=="30x30m_Special"){
Number_of_tree_in_30x30=dfx$tree_data.Number_of_trees/resample_number1
size_class=">10cm"
}
if( dfx$tree_data.plot_type == "10x10m"){
#Scale tree number to 30x30m by multiplying by 9
Number_of_tree_in_30x30=(dfx$tree_data.Number_of_trees * 9)/resample_number1
size_class=">10cm"
}
#Get number of medium-sized trees 1-9.9cm dbh
if(dfx$tree_data.plot_type == "3x3m within 30x30m" |
dfx$tree_data.plot_type=="3x3m_Special" |
dfx$tree_data.plot_type=="3x3m within 10x10m" ){
#Scale tree number to 30x30m by multiplying by 100
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*100)
size_class="1-9.9cm"
}
#Get number of medium-sized trees 1cm dbh
if(dfx$tree_data.plot_type== "1x1m"){
#Scale tree number to 30x30m by multiplying by 900
Number_of_tree_in_30x30=((dfx$tree_data.Number_of_trees/resample_number2)*900)
size_class="<1cm"}
dfx_out = data.frame(Number_of_tree_in_30x30=Number_of_tree_in_30x30, size_class=size_class)
return(dfx_out)
})
Number_of_trees_per_30x30m = do.call("rbind", Number_of_trees_per_30x30m)
#Number of trees per 30x30m:
site_tree_data$Number_of_trees_per_30x30m = Number_of_trees_per_30x30m$Number_of_tree_in_30x30
site_tree_data$size_class = Number_of_trees_per_30x30m$size_class
#get the number restores, planted, regnerating, etc,
tree_freqs=aggregate(site_tree_data$Number_of_trees_per_30x30m, list("Tree_type"=site_tree_data$tree_data.Tree_type,
"Species" = site_tree_data$tree_data.Species,
"size_class"=site_tree_data$size_class), sum)
#Change column names to x
colnames(tree_freqs)[which(colnames(tree_freqs)=="x")] = "Tree_per_sq_30m"
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
return(tree_freq_out)
}else{
tree_freqs = data.frame("Tree_type" = NA, "Species" = NA, "size_class"=NA, "Tree_per_sq_30m" = NA)
#Get pertinent plot data and add it to the tree frequency data
repped_main2=main_add_to_tree[rep(seq_len(nrow(main_add_to_tree)), each = length(tree_freqs[,1])), ]
tree_freq_out=cbind(tree_freqs, repped_main2)
return(tree_freq_out)
}
})
tree_freq_data_site=do.call("rbind", trefreq_data)
date = Sys.Date()
PPC_ind_file_name = paste(paste("Data_for_PPC_indicators", date, sep="_"), "csv", sep=".")
PPC_ind_file_name
#Get PPC site infor names for
setwd("/Users/tperez/Library/CloudStorage/OneDrive-ConservationInternationalFoundation/Desktop/CI_git_projects/PPC/")
write.csv(tree_freq_data_site, PPC_ind_file_name)
?write.csv
write.csv(tree_freq_data_site, PPC_ind_file_name, row.names = F)
